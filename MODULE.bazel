module(name = "player", version = "1.0")

bazel_dep(name = "rules_player")

git_override(
    remote = "https://github.com/player-ui/rules_player.git",
    # bazel-6 branch
    commit = "afb93d22ac6977f45252888e162cc25f0bdca1c5",
    module_name = "rules_player",
)
# local_path_override(module_name = "rules_player", path = "../rules_player")

bazel_dep(name = "aspect_bazel_lib", version = "1.32.0")
bazel_dep(name = "aspect_rules_js", version = "1.34.1")
bazel_dep(name = "bazel_skylib", version = "1.4.1")
bazel_dep(name = "rules_pkg", version = "0.9.1")
bazel_dep(name = "aspect_rules_ts", version = "2.1.0")

####### Node.js version #########
bazel_dep(name = "rules_nodejs", version = "6.0.2")
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "18.18.0")
#################################

###### Start iOS ######
## Rule Dependencies
bazel_dep(name = "rules_swift", version = "1.18.0", repo_name = "build_bazel_rules_swift")
bazel_dep(name = "rules_apple", version = "3.5.1", repo_name = "build_bazel_rules_apple")
bazel_dep(name = "rules_ios", version = "4.3.1", repo_name = "build_bazel_rules_ios")
bazel_dep(name = "rules_xcodeproj", version = "2.2.0")

bazel_dep(name = "gazelle", version = "0.34.0", repo_name = "bazel_gazelle")
bazel_dep(name = "rules_swift_package_manager", version = "0.22.0")

## This section is handled by rules_swift_package_manager
swift_deps = use_extension(
    "@rules_swift_package_manager//:extensions.bzl",
    "swift_deps",
)
swift_deps.from_file(
    deps_index = "//:swift_deps_index.json",
)

## SPM Dependencies
### need to be listed here to be available as a target in BUILD files
### Add dependency in xcode/Package.swift and then run `bazel run //:update_swift_pkgs`
### before adding it here
use_repo(
    swift_deps,
    "swiftpkg_swift_hooks",
    "swiftpkg_viewinspector",
)

###### End iOS ######
npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    data = [
        "//:package.json",
    ],
    npmrc = "//:.npmrc",
    verify_node_modules_ignored = "//:.bazelignore",
)

use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)

rules_ts_ext.deps()

use_repo(rules_ts_ext, "npm_typescript")

# Maven
bazel_dep(name = "rules_jvm_external", version = "5.3")
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")

maven.install(
    artifacts = [
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2",
        "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0",
        "com.intuit.hooks:hooks:0.11.1",

        # Testing
        "io.mockk:mockk:1.9.3",
        "org.amshove.kluent:kluent:1.68",
        "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2",

        # Android
        "androidx.databinding:databinding-adapters:7.2.2",
        "androidx.databinding:databinding-common:7.2.2",
        "androidx.databinding:databinding-runtime:7.2.2",

        # Grab Dagger
        "com.google.dagger:dagger:2.35.1",
        "com.google.dagger:dagger-compiler:2.35.1",
        #"javax.inject:javax.inject:2.35.1",

        # AndroidX Resolutions
        "androidx.activity:activity-ktx:1.2.3",
        "androidx.fragment:fragment-ktx:1.3.4",

        # Graal
        "org.graalvm.js:js:21.2.0",
        "org.graalvm.js:js-scriptengine:21.2.0",
        "org.graalvm.sdk:graal-sdk:21.2.0",

        # J2V8
        "com.github.AlexTrotsenko:j2v8-debugger:0.2.3",
        "org.jetbrains.kotlin:kotlin-serialization-unshaded:1.9.23",

        # Test utils
        "org.junit.jupiter:junit-jupiter-api:5.6.0",

        # Perf
        "org.openjdk.jmh:jmh-core:1.21",
        "org.openjdk.jmh:jmh-generator-annprocess:1.21",

        # Distribution
        "com.eclipsesource.minimal-json:minimal-json:0.9.5",
        "com.electronwill.night-config:core:3.6.5",
        "com.electronwill.night-config:toml:3.6.5",
        "com.google.http-client:google-http-client:1.34.2",
        "info.picocli:picocli:4.3.2",
        "org.apache.commons:commons-compress:1.21",
        "org.zeroturnaround:zt-exec:1.10",
        "com.github.ajalt.clikt:clikt-jvm:3.4.0",
        "io.github.gradle-nexus:publish-plugin:1.1.0",
        "ch.qos.logback:logback-classic:1.2.11",

        # Grab bazel common
        "org.jetbrains.kotlin:kotlin-parcelize-compiler:1.7.21",
        "org.jetbrains.kotlin:kotlin-parcelize-runtime:1.7.21",
        "androidx.databinding:viewbinding:7.1.2",
        "org.json:json:20210307",
        "junit:junit:4.13",

        # slf4j
        "org.slf4j:slf4j-api:1.7.36",
        "ch.qos.logback:logback-classic:1.2.10",
    ],
    fetch_sources = True,
    fail_if_repin_required = True,
    repositories = [
        "https://repo1.maven.org/maven2",
        "https://maven.google.com/",
        "https://plugins.gradle.org/m2/",
        "https://jcenter.bintray.com/",
        "https://jitpack.io/",
    ],
    lock_file = "//:maven_install.json",
)

maven.install(
    name = "kotlinx_coroutines_core_fixed",
    artifacts = [
        "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:jar:1.5.2",
    ],
    fetch_sources = True,
    fail_if_repin_required = True,
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
    lock_file = "//:maven_install.json",
)
use_repo(maven, "maven", "unpinned_maven")



# Kotlin
bazel_dep(name = "rules_kotlin", version = "1.9.0", repo_name = "io_bazel_rules_kotlin")

